{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jair Konzen\\\\Documents\\\\projects\\\\MyCalendar\\\\src\\\\components\\\\DarkModeBtn\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Switch, Slider, StyledCheckbox } from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Toggler({\n  onToggle\n}) {\n  _s();\n  const [isToggled, setIsToggled] = useState(false);\n  const handleToggle = () => {\n    setIsToggled(!isToggled);\n    if (onToggle) {\n      onToggle(!isToggled);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Switch, {\n    children: [/*#__PURE__*/_jsxDEV(StyledCheckbox, {\n      type: \"checkbox\",\n      name: \"\",\n      id: \"\",\n      onChange: handleToggle,\n      checked: isToggled\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Slider, {\n      className: \"Slider\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n_s(Toggler, \"BfAUiqoWRJivSt7ElaSfVLryCwQ=\");\n_c = Toggler;\nvar _c;\n$RefreshReg$(_c, \"Toggler\");","map":{"version":3,"names":["React","useState","Switch","Slider","StyledCheckbox","jsxDEV","_jsxDEV","Toggler","onToggle","_s","isToggled","setIsToggled","handleToggle","children","type","name","id","onChange","checked","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["C:/Users/Jair Konzen/Documents/projects/MyCalendar/src/components/DarkModeBtn/index.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Switch, Slider, StyledCheckbox } from './styles';\r\n\r\nexport default function Toggler({ onToggle }) {\r\n  const [isToggled, setIsToggled] = useState(false);\r\n\r\n  const handleToggle = () => {\r\n    setIsToggled(!isToggled);\r\n    if (onToggle) {\r\n      onToggle(!isToggled);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Switch>\r\n      <StyledCheckbox\r\n        type=\"checkbox\"\r\n        name=\"\"\r\n        id=\"\"\r\n        onChange={handleToggle}\r\n        checked={isToggled}\r\n      />\r\n      <Slider className=\"Slider\"></Slider>\r\n    </Switch>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,EAAEC,MAAM,EAAEC,cAAc,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,eAAe,SAASC,OAAOA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAC5C,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMW,YAAY,GAAGA,CAAA,KAAM;IACzBD,YAAY,CAAC,CAACD,SAAS,CAAC;IACxB,IAAIF,QAAQ,EAAE;MACZA,QAAQ,CAAC,CAACE,SAAS,CAAC;IACtB;EACF,CAAC;EAED,oBACEJ,OAAA,CAACJ,MAAM;IAAAW,QAAA,gBACLP,OAAA,CAACF,cAAc;MACbU,IAAI,EAAC,UAAU;MACfC,IAAI,EAAC,EAAE;MACPC,EAAE,EAAC,EAAE;MACLC,QAAQ,EAAEL,YAAa;MACvBM,OAAO,EAAER;IAAU;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB,CAAC,eACFhB,OAAA,CAACH,MAAM;MAACoB,SAAS,EAAC;IAAQ;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9B,CAAC;AAEb;AAACb,EAAA,CAtBuBF,OAAO;AAAAiB,EAAA,GAAPjB,OAAO;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}