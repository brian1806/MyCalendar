{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jair Konzen\\\\Documents\\\\projects\\\\MyCalendar\\\\src\\\\components\\\\Calendar\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Frame, Header, Button, Body, Day, MonthsYear, DayOfWeek, DoublesDiv, SortedPair, PopUp, DayNumber, H2PopUp } from \"./styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DAYS = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nconst DAYS_LEAP = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nconst DAYS_OF_THE_WEEK = ['Dom', 'Seg', 'Ter', 'Qua', 'Qui', 'Sex', 'Sab'];\nconst MONTHS = ['Janeiro', 'Fevereiro', 'Março', 'Abril', 'Maio', 'Junho', 'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro'];\nexport default function Calendar({\n  participantPairs\n}) {\n  _s();\n  // Estado para armazenar a data atual e o início do dia\n  const today = new Date();\n  const [date, setDate] = useState(today);\n  const [day, setDay] = useState(date.getDate());\n  const [month, setMonth] = useState(date.getMonth());\n  const [year, setYear] = useState(date.getFullYear());\n  const [startDay, setStartDay] = useState(getStartDayOfMonth(date));\n\n  // Estados para controlar os pares atribuídos, o conteúdo do popup e se o popup deve ser exibido\n  const [assignedPairs, setAssignedPairs] = useState({});\n  const [showPopUp, setShowPopUp] = useState(false);\n  const [popUpContent, setPopUpContent] = useState(\"\");\n\n  // Efeito para atualizar os estados quando a data ou a lista de pares de participantes mudar\n  useEffect(() => {\n    setDay(date.getDate());\n    setMonth(date.getMonth());\n    setYear(date.getFullYear());\n    setStartDay(getStartDayOfMonth(date));\n    assignDoubles();\n    console.log(\"Pares atribuídos:\", assignedPairs);\n  }, [date, participantPairs]);\n\n  // Função para obter o dia de início do mês\n  function getStartDayOfMonth(date) {\n    return new Date(date.getFullYear(), date.getMonth(), 1).getDay();\n  }\n\n  // Função para verificar se o ano é bissexto\n  function isLeapYear(year) {\n    return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n  }\n  const days = isLeapYear(date.getFullYear()) ? DAYS_LEAP : DAYS; // Arrays de dias dependendo se o ano é bissexto ou não\n\n  // Função para encontrar todas as sextas-feiras do ano\n  function findFridays() {\n    const fridays = [];\n    const currentDate = new Date();\n    const currentMonth = currentDate.getMonth();\n    const currentYear = new Date().getFullYear();\n\n    // Iterar sobre os meses do ano atual\n    for (let month = currentMonth; month < 12; month++) {\n      const daysInMonth = new Date(currentYear, month + 1, 0).getDate();\n\n      // Loop pelos dias do mês, começando a partir do startDay\n      for (let day = 1; day <= daysInMonth; day++) {\n        const currentDay = new Date(currentYear, month, day);\n        if (currentDay.getDay() === 5) {\n          fridays.push({\n            day,\n            month,\n            year: currentYear\n          });\n        }\n      }\n    }\n    return fridays;\n  }\n\n  // Função para atribuir duplas às sextas-feiras\n  function assignDoubles() {\n    const fridays = findFridays();\n    const assignedPairsCopy = {};\n    let pairIndex = 0;\n    fridays.forEach(({\n      day,\n      month,\n      year\n    }) => {\n      const fridayDate = new Date(year, month, day);\n      if (pairIndex < participantPairs.length) {\n        const pair = participantPairs[pairIndex];\n        assignedPairsCopy[fridayDate.toISOString()] = pair;\n        pairIndex++;\n      } else {\n        assignedPairsCopy[fridayDate.toISOString()] = null; // Define como null se não houver duplas disponíveis\n      }\n    });\n\n    // Iterar sobre as sextas-feiras e imprimir aquelas que possuem duplas atribuídas\n    Object.entries(assignedPairsCopy).forEach(([friday, pairs]) => {\n      if (pairs) {\n        console.log(`Mês: ${MONTHS[new Date(friday).getMonth()]}\\n Sexta-feira dia ${new Date(friday).getDate()}\\n Duplas: ${pairs}\\n `); //Data: ${friday}\n      }\n    });\n    setAssignedPairs(assignedPairsCopy);\n  }\n\n  // Função para lidar com o clique em uma sexta-feira\n  function handlePopUpClick(day) {\n    const clickedDate = new Date(year, month, day);\n    const pair = assignedPairs[clickedDate.toISOString()];\n    if (pair) {\n      setPopUpContent(`Na Sexta-feira dia ${day} de ${MONTHS[month]}, a equipe designada para limpeza esta semana é composta por ${pair[0]} e ${pair[1]}. A tarefa de limpeza inclui varrer o chão e retirar o lixo em várias áreas, tais como a sala de Hardware, a sala principal, o corredor, a cozinha e o estoque.`);\n      setShowPopUp(true);\n    }\n  }\n  function handlePrevMonthClick() {\n    setDate(new Date(date.getFullYear(), date.getMonth() - 1, date.getDate()));\n  }\n  function handleNextMonthClick() {\n    setDate(new Date(date.getFullYear(), date.getMonth() + 1, date.getDate()));\n  }\n  return /*#__PURE__*/_jsxDEV(Frame, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: handlePrevMonthClick,\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"bi bi-chevron-compact-left\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 48\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MonthsYear, {\n        children: [MONTHS[date.getMonth()], \" \", date.getFullYear()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleNextMonthClick,\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"bi bi-chevron-compact-right\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 48\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Body, {\n      children: [DAYS_OF_THE_WEEK.map((dayOfWeek, index) => /*#__PURE__*/_jsxDEV(DayOfWeek, {\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: dayOfWeek\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this)), Array.from({\n        length: 42\n      }, (_, index) => {\n        const d = index - (startDay - 1);\n        const isCurrentMonth = d > 0 && d <= new Date(date.getFullYear(), date.getMonth() + 1, 0).getDate();\n        const isFriday = isCurrentMonth && new Date(date.getFullYear(), date.getMonth(), d).getDay() === 5;\n        const isToday = isCurrentMonth && d === today.getDate();\n        return /*#__PURE__*/_jsxDEV(Day, {\n          isToday: isToday && d === today.getDate() && month === today.getMonth() && year === today.getFullYear(),\n          isSelected: isCurrentMonth && d === today.getDate(),\n          onClick: () => handlePopUpClick(d),\n          children: isCurrentMonth && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [isFriday && assignedPairs[new Date(date.getFullYear(), date.getMonth(), d).toISOString()] && /*#__PURE__*/_jsxDEV(DoublesDiv, {\n              children: [/*#__PURE__*/_jsxDEV(SortedPair, {\n                children: assignedPairs[new Date(date.getFullYear(), date.getMonth(), d).toISOString()][0]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(SortedPair, {\n                children: assignedPairs[new Date(date.getFullYear(), date.getMonth(), d).toISOString()][1]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(DayNumber, {\n                children: isCurrentMonth ? d : ''\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), showPopUp && /*#__PURE__*/_jsxDEV(PopUp, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(H2PopUp, {\n          children: \"Dupla designada para esta semana\\uD83D\\uDE0E\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: popUpContent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowPopUp(false),\n          children: \"Fechar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n}\n_s(Calendar, \"Mc3IxvF7pOfOeMfGnUuHGOLhyM0=\");\n_c = Calendar;\nvar _c;\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["React","useState","useEffect","Frame","Header","Button","Body","Day","MonthsYear","DayOfWeek","DoublesDiv","SortedPair","PopUp","DayNumber","H2PopUp","jsxDEV","_jsxDEV","Fragment","_Fragment","DAYS","DAYS_LEAP","DAYS_OF_THE_WEEK","MONTHS","Calendar","participantPairs","_s","today","Date","date","setDate","day","setDay","getDate","month","setMonth","getMonth","year","setYear","getFullYear","startDay","setStartDay","getStartDayOfMonth","assignedPairs","setAssignedPairs","showPopUp","setShowPopUp","popUpContent","setPopUpContent","assignDoubles","console","log","getDay","isLeapYear","days","findFridays","fridays","currentDate","currentMonth","currentYear","daysInMonth","currentDay","push","assignedPairsCopy","pairIndex","forEach","fridayDate","length","pair","toISOString","Object","entries","friday","pairs","handlePopUpClick","clickedDate","handlePrevMonthClick","handleNextMonthClick","children","onClick","className","fileName","_jsxFileName","lineNumber","columnNumber","map","dayOfWeek","index","Array","from","_","d","isCurrentMonth","isFriday","isToday","isSelected","_c","$RefreshReg$"],"sources":["C:/Users/Jair Konzen/Documents/projects/MyCalendar/src/components/Calendar/index.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Frame, Header, Button, Body, Day, MonthsYear, DayOfWeek, DoublesDiv, SortedPair, PopUp, DayNumber, H2PopUp} from \"./styles\";\r\n\r\nconst DAYS = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\nconst DAYS_LEAP = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\nconst DAYS_OF_THE_WEEK = ['Dom', 'Seg', 'Ter', 'Qua', 'Qui', 'Sex', 'Sab'];\r\nconst MONTHS = ['Janeiro', 'Fevereiro', 'Março', 'Abril', 'Maio', 'Junho', 'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro'];\r\n\r\nexport default function Calendar({ participantPairs }) {\r\n  // Estado para armazenar a data atual e o início do dia\r\n  const today = new Date();\r\n  const [date, setDate] = useState(today);\r\n  const [day, setDay] = useState(date.getDate());\r\n  const [month, setMonth] = useState(date.getMonth());\r\n  const [year, setYear] = useState(date.getFullYear());\r\n  const [startDay, setStartDay] = useState(getStartDayOfMonth(date));\r\n\r\n  // Estados para controlar os pares atribuídos, o conteúdo do popup e se o popup deve ser exibido\r\n  const [assignedPairs, setAssignedPairs] = useState({});\r\n  const [showPopUp, setShowPopUp] = useState(false);\r\n  const [popUpContent, setPopUpContent] = useState(\"\");\r\n\r\n  // Efeito para atualizar os estados quando a data ou a lista de pares de participantes mudar\r\n  useEffect(() => {\r\n    setDay(date.getDate());\r\n    setMonth(date.getMonth());\r\n    setYear(date.getFullYear());\r\n    setStartDay(getStartDayOfMonth(date));\r\n    assignDoubles();\r\n    console.log(\"Pares atribuídos:\", assignedPairs);\r\n  }, [date, participantPairs])\r\n\r\n  // Função para obter o dia de início do mês\r\n  function getStartDayOfMonth(date) {\r\n    return new Date(date.getFullYear(), date.getMonth(), 1).getDay();\r\n  }\r\n\r\n  // Função para verificar se o ano é bissexto\r\n  function isLeapYear(year) {\r\n    return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\r\n  }\r\n\r\n  const days = isLeapYear(date.getFullYear()) ? DAYS_LEAP : DAYS; // Arrays de dias dependendo se o ano é bissexto ou não\r\n\r\n  // Função para encontrar todas as sextas-feiras do ano\r\n  function findFridays() {\r\n    const fridays = [];\r\n    const currentDate = new Date();\r\n    const currentMonth = currentDate.getMonth();\r\n    const currentYear = new Date().getFullYear();\r\n\r\n    // Iterar sobre os meses do ano atual\r\n    for (let month = currentMonth; month < 12; month++) {\r\n      const daysInMonth = new Date(currentYear, month + 1, 0).getDate();\r\n\r\n      // Loop pelos dias do mês, começando a partir do startDay\r\n      for (let day = 1; day <= daysInMonth; day++) {\r\n        const currentDay = new Date(currentYear, month, day);\r\n        if (currentDay.getDay() === 5) {\r\n          fridays.push({ day, month, year: currentYear });\r\n        }\r\n      }\r\n    }\r\n\r\n    return fridays;\r\n  }\r\n\r\n  // Função para atribuir duplas às sextas-feiras\r\n  function assignDoubles() {\r\n    const fridays = findFridays();\r\n    const assignedPairsCopy = {};\r\n    let pairIndex = 0;\r\n\r\n    fridays.forEach(({ day, month, year }) => {\r\n      const fridayDate = new Date(year, month, day);\r\n\r\n      if (pairIndex < participantPairs.length) {\r\n        const pair = participantPairs[pairIndex];\r\n        assignedPairsCopy[fridayDate.toISOString()] = pair;\r\n        pairIndex++;\r\n      } else {\r\n        assignedPairsCopy[fridayDate.toISOString()] = null; // Define como null se não houver duplas disponíveis\r\n      }\r\n    });\r\n\r\n    // Iterar sobre as sextas-feiras e imprimir aquelas que possuem duplas atribuídas\r\n    Object.entries(assignedPairsCopy).forEach(([friday, pairs]) => {\r\n      if (pairs) {\r\n        console.log(`Mês: ${MONTHS[new Date(friday).getMonth()]}\\n Sexta-feira dia ${new Date(friday).getDate()}\\n Duplas: ${pairs}\\n `);//Data: ${friday}\r\n      }\r\n    });\r\n\r\n    setAssignedPairs(assignedPairsCopy);\r\n  }\r\n\r\n  // Função para lidar com o clique em uma sexta-feira\r\n  function handlePopUpClick(day) {\r\n    const clickedDate = new Date(year, month, day);\r\n    const pair = assignedPairs[clickedDate.toISOString()];\r\n\r\n    if (pair) {\r\n      setPopUpContent(`Na Sexta-feira dia ${day} de ${MONTHS[month]}, a equipe designada para limpeza esta semana é composta por ${pair[0]} e ${pair[1]}. A tarefa de limpeza inclui varrer o chão e retirar o lixo em várias áreas, tais como a sala de Hardware, a sala principal, o corredor, a cozinha e o estoque.`);\r\n      setShowPopUp(true);\r\n    }\r\n  }\r\n\r\n  function handlePrevMonthClick() {\r\n    setDate(new Date(date.getFullYear(), date.getMonth() - 1, date.getDate()));\r\n  }\r\n\r\n  function handleNextMonthClick() {\r\n    setDate(new Date(date.getFullYear(), date.getMonth() + 1, date.getDate()));\r\n  }\r\n\r\n  return (\r\n    <Frame>\r\n      <Header>\r\n        <Button onClick={handlePrevMonthClick}><i className=\"bi bi-chevron-compact-left\"></i></Button>\r\n        <MonthsYear>\r\n          {MONTHS[date.getMonth()]} {date.getFullYear()}\r\n        </MonthsYear>\r\n        <Button onClick={handleNextMonthClick}><i className=\"bi bi-chevron-compact-right\"></i></Button>\r\n      </Header>\r\n      <Body>\r\n        {DAYS_OF_THE_WEEK.map((dayOfWeek, index) => (\r\n          <DayOfWeek key={index}>\r\n            <strong>{dayOfWeek}</strong>\r\n          </DayOfWeek>\r\n        ))}\r\n        {Array.from({ length: 42 }, (_, index) => {\r\n          const d = index - (startDay - 1);\r\n          const isCurrentMonth = d > 0 && d <= new Date(date.getFullYear(), date.getMonth() + 1, 0).getDate();\r\n          const isFriday = isCurrentMonth && new Date(date.getFullYear(), date.getMonth(), d).getDay() === 5;\r\n          const isToday = isCurrentMonth && d === today.getDate();\r\n\r\n          return (\r\n            <Day key={index}\r\n              isToday={isToday && d === today.getDate() && month === today.getMonth() && year === today.getFullYear()}\r\n              isSelected={isCurrentMonth && d === today.getDate()}\r\n              onClick={() => handlePopUpClick(d)}\r\n            >\r\n              {isCurrentMonth && (\r\n                <>\r\n                  {isFriday && assignedPairs[new Date(date.getFullYear(), date.getMonth(), d).toISOString()] && (\r\n                    <DoublesDiv>\r\n                      <SortedPair>{assignedPairs[new Date(date.getFullYear(), date.getMonth(), d).toISOString()][0]}</SortedPair>\r\n                      <SortedPair>{assignedPairs[new Date(date.getFullYear(), date.getMonth(), d).toISOString()][1]}</SortedPair>\r\n                    </DoublesDiv>\r\n                  )}\r\n                  <div>\r\n                    <DayNumber>{isCurrentMonth ? d : ''}</DayNumber>\r\n                  </div>\r\n                </>\r\n              )}\r\n            </Day>\r\n          );\r\n        })}\r\n      </Body>\r\n      {showPopUp && (\r\n        <PopUp>\r\n          <div>\r\n            <H2PopUp>Dupla designada para esta semana😎</H2PopUp>\r\n            <p>{popUpContent}</p>\r\n            <button onClick={() => setShowPopUp(false)}>Fechar</button>\r\n          </div>\r\n        </PopUp>\r\n      )}\r\n    </Frame>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}